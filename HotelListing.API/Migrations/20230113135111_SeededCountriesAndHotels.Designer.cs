// <auto-generated />
using HotelListing.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelListing.API.Migrations
{
    [DbContext(typeof(HotelListingDbContext))]
    [Migration("20230113135111_SeededCountriesAndHotels")]
    partial class SeededCountriesAndHotels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelListing.API.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jamaica",
                            ShortName = "JM"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bahamas",
                            ShortName = "BS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cayman Islands",
                            ShortName = "CI"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cuba",
                            ShortName = "CU"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dominican Republic",
                            ShortName = "DR"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Haiti",
                            ShortName = "HT"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Trinidad and Tobago",
                            ShortName = "TT"
                        },
                        new
                        {
                            Id = 8,
                            Name = "United States",
                            ShortName = "US"
                        });
                });

            modelBuilder.Entity("HotelListing.API.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Nassau, New Providence Island",
                            CountryId = 2,
                            Name = "Sandals Royal Bahamian",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 2,
                            Address = "Montego Bay, Jamaica",
                            CountryId = 1,
                            Name = "Sandals Royal Caribbean",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 3,
                            Address = "Montego Bay, Jamaica",
                            CountryId = 1,
                            Name = "Sandals Montego Bay",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 4,
                            Address = "Negril, Jamaica",
                            CountryId = 1,
                            Name = "Sandals Negril Beach Resort & Spa",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 5,
                            Address = "Whitehouse, Jamaica",
                            CountryId = 1,
                            Name = "Sandals South Coast",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 6,
                            Address = "Ocho Rios, Jamaica",
                            CountryId = 1,
                            Name = "Sandals Ochi Beach Resort",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 7,
                            Address = "Castries, St. Lucia",
                            CountryId = 1,
                            Name = "Sandals Grande St. Lucian Spa & Beach Resort",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 8,
                            Address = "St. George's, Grenada",
                            CountryId = 1,
                            Name = "Sandals LaSource Grenada Resort & Spa",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 9,
                            Address = "Great Exuma, Bahamas",
                            CountryId = 2,
                            Name = "Sandals Emerald Bay Golf, Tennis & Spa Resort",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 10,
                            Address = "Montego Bay, Jamaica",
                            CountryId = 1,
                            Name = "Sandals Royal Caribbean",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 11,
                            Address = "St. John's, Antigua",
                            CountryId = 1,
                            Name = "Sandals Grande Antigua Resort & Spa",
                            Rating = 4.5
                        });
                });

            modelBuilder.Entity("HotelListing.API.Models.Hotel", b =>
                {
                    b.HasOne("HotelListing.API.Models.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelListing.API.Models.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
